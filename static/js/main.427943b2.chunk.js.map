{"version":3,"sources":["Header/Header.module.scss","Footer/Footer.module.scss","MainCanvas/Meshes.js","MainCanvas/MainMesh.js","MainCanvas/MainCanvas.js","Header/Header.js","Footer/Footer.js","Menu/SlideBar.js","App.js","index.js"],"names":["module","exports","textureArr","name","fileName","MainMesh","position","args","shape","textureType","useState","expand","setExpand","mesh","useRef","useFrame","current","rotation","x","y","AvailableTextures","AvailableTexturesPaths","value","push","process","useTexture","props","useSpring","scale","onClick","castShadow","ref","attach","handleMeshShape","map","factor","roughness","softShadows","MainCanvas","isVisible","shadows","colorManagement","camera","fov","intensity","receiveShadow","Math","PI","opacity","color","fallback","multisampling","disableNormalPass","focusDisctance","focalLength","bokehScale","height","offset","darkness","eskil","blendFunction","BlendFunction","NORMAL","OrbitControls","Sky","distance","sunPosition","Inclination","azimuth","rayleigh","Header","toggleMenu","className","classes","style","display","alignItems","Footer","toggleVisibility","toggleShape","SideBar","isMenuOpen","setTexture","isActive","setIsActive","nameArr","customBurgerIcon","isOpen","onClose","fontWeight","person","index","checkIfActive","join","App","setIsVisible","setShape","setIsMenuOpen","setTextureType","SlideBar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.427943b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"episode\":\"Header_episode__1j6XB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__ba7kL\",\"logo\":\"Footer_logo__2L6xR\",\"episode\":\"Footer_episode__2Jeem\"};","\r\n\r\n// Array that contains all the meshes\r\nconst textureArr = [\r\n    \r\n    {\r\n        name: \"Apandah\",\r\n        fileName: \"/Apandah.jpg\"\r\n    },\r\n    {\r\n        name: \"Aztrosist\",\r\n        fileName: \"/Aztro.jpg\"\r\n    },\r\n    {\r\n        name: \"Jschlatt\",\r\n        fileName: \"/Jschlatt.png\"\r\n    },\r\n    {\r\n        name: \"Mikasacus\",\r\n        fileName: \"/Mikasacus.jpg\"\r\n    }\r\n\r\n]\r\n\r\nexport default textureArr;","import React, { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useTexture } from \"@react-three/drei\";\r\nimport { useSpring, a } from \"@react-spring/three\";\r\n\r\nimport textureArr from \"./Meshes\";\r\n\r\nconst MainMesh = ({ position, args, shape, textureType }) => {\r\n  \r\n  // declare State hook\r\n  const [expand, setExpand] = useState(false);\r\n\r\n  // Refresh every Frame\r\n  const mesh = useRef(null);\r\n  useFrame(() => {\r\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.007;\r\n  });\r\n\r\n\r\n  // This might not be very Optimized\r\n  // TODO: Check drei for possible optimizations \r\n  // Creates 2 Arrays, one with the file names,\r\n  // the other with the Paths\r\n  let AvailableTextures = [];\r\n  let AvailableTexturesPaths = [];\r\n  for(let value of textureArr){\r\n    AvailableTextures.push(value.name + \"Texture\");\r\n    AvailableTexturesPaths.push(process.env.PUBLIC_URL + value.fileName);\r\n  }\r\n  \r\n  AvailableTextures = useTexture(AvailableTexturesPaths);\r\n\r\n\r\n\r\n  // Load Animations with spring\r\n  const props = useSpring({\r\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\r\n  });\r\n\r\n\r\n  // TODO: Add More Shapes\r\n  // TODO: Maybe port this to the Slidebar?\r\n\r\n  // handles shape of Mesh, Sphere or Box\r\n  function handleMeshShape() {   \r\n\r\n    switch(shape) {\r\n      \r\n      case 0:\r\n        return <boxBufferGeometry attach=\"geometry\" args={args} />;\r\n      case 1:\r\n        return <sphereBufferGeometry attach=\"geometry\" args={[args[0], (args[1] * 15), (args[2] * 13)]} />;\r\n\r\n\r\n      // Current Way it is set up,\r\n      // if case is not recognized, do nothing\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <a.mesh\r\n      onClick={() => setExpand(!expand)}\r\n      scale={props.scale}\r\n      castShadow\r\n      position={position}\r\n      ref={mesh}\r\n    >\r\n      {handleMeshShape()}\r\n      <meshStandardMaterial\r\n        attach=\"material\"\r\n\r\n        map={\r\n          AvailableTextures[textureType]\r\n          // MeshArr[textureType]\r\n        }\r\n\r\n\r\n\r\n        factor={0.3}\r\n        roughness={0.7}\r\n      />\r\n    </a.mesh>\r\n  );\r\n};\r\n\r\nexport default MainMesh;\r\n","import React, { Suspense } from \"react\";\r\n\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { softShadows, OrbitControls, Sky } from \"@react-three/drei\";\r\nimport {\r\n  EffectComposer,\r\n  DepthOfField,\r\n  Noise,\r\n  SMAA,\r\n  Vignette,\r\n} from \"@react-three/postprocessing\";\r\nimport { BlendFunction } from \"postprocessing\";\r\n\r\nimport MainMesh from \"./MainMesh\";\r\n\r\n// Softens the Shadows\r\nsoftShadows();\r\n\r\n\r\nconst MainCanvas = ({isVisible, shape, textureType}) => {\r\n\r\n  \r\n\r\n  return (\r\n    <Canvas shadows colorManagement camera={{ position: [-5, 2, 10], fov: 60 }}>\r\n      <ambientLight intensity={0.2} />\r\n\r\n      <directionalLight\r\n        castShadow\r\n        position={[0, 10, 0]}\r\n        intensity={1}\r\n        shadow-mapSize-width={1024}\r\n        shadow-mapSize-height={1024}\r\n        shadow-camera-far={50}\r\n        shadow-camera-left={-10}\r\n        shadow-camera-right={10}\r\n        shadow-camera-top={10}\r\n        shadow-camera-bottom={-10}\r\n      />\r\n\r\n      {/* <pointLight position={[-10, 0, -20]} intensity={0.5} />\r\n      <pointLight position={[0, -10, 0]} intensity={1.5} /> */}\r\n\r\n\r\n      <fog attach=\"fog\" args={['#f0f0f0', 20, 40]} />\r\n      <group>\r\n\r\n        <mesh receiveShadow rotation={[-Math.PI / 2, 0, 0]} position={[0, -3, 0]}>\r\n          <planeBufferGeometry attach=\"geometry\" args={[250, 250]} />\r\n          <shadowMaterial attach=\"material\" opacity={0.3} />\r\n          <meshStandardMaterial attach=\"material\" color={\"#FFCAF6\"} />\r\n        </mesh>\r\n\r\n        <Suspense fallback={null}>\r\n\r\n          { isVisible ? <MainMesh position={[0, 1, 0]} args={[2, 2, 2]} shape={shape} textureType={textureType} /> : \"\"}\r\n\r\n        </Suspense>\r\n\r\n      </group>\r\n\r\n      <EffectComposer multisampling={0} disableNormalPass={true}>\r\n        <DepthOfField\r\n          focusDisctance={1}\r\n          focalLength={0.07}\r\n          bokehScale={3}\r\n          height={480}\r\n        />\r\n        {/* <Bloom luminanceThreshold={0} luminanceSmoothing={0.9} height={300} /> */}\r\n        <Noise opacity={0.02} />\r\n\r\n\r\n        {/* TIP: SMAA Fucked up the Vignette last time, Watch out */}\r\n        <Vignette\r\n          offset={0.5} // vignette offset\r\n          darkness={0.5} // vignette darkness\r\n          eskil={false} // Eskil's vignette technique\r\n          blendFunction={BlendFunction.NORMAL} // blend mode\r\n        />\r\n\r\n      </EffectComposer>\r\n      <OrbitControls />  \r\n\r\n      {/* TODO: Lower the Sun's brightness */}\r\n      <Sky\r\n        distance={450000}\r\n        sunPosition={[5, 1, -6]}\r\n        Inclination={0}\r\n        azimuth={100} // what does this even do?????\r\n        rayleigh={0.2}\r\n        // for more methods check : https://threejs.org/examples/webgl_shaders_sky.html\r\n      />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default MainCanvas;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Header.module.scss\";\r\n\r\nconst Header = ({toggleMenu}) => {\r\n    return(\r\n        <header className={classes.Header}>\r\n            <div  style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n                {/* TODO: Maybe Change Options Button to something else */}\r\n                <button onClick={toggleMenu}>Options</button>\r\n                <h4>Pandah World</h4>\r\n            </div>\r\n            <h4>By Ciel</h4>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport classes from \"./Footer.module.scss\";\r\n\r\n\r\nconst Footer = ({toggleVisibility, isVisible, toggleShape, shape}) => {\r\n\r\n    // TODO: Add more Buttons that control Texture\r\n    // TODO: add Effects Buttons, maybe slider???\r\n    // TODO: Add night time button, adds Stars, removes sun, darkens light emitters\r\n    // TIP: Use Leva or react-three/gui\r\n    // All components that will act as a UI MUST be overlapped over the canvas\r\n\r\n    const handleShape = () => {\r\n        if(shape === 0) toggleShape(1);\r\n        else toggleShape(0);\r\n    } \r\n\r\n    return(\r\n        <footer className={classes.Footer}>\r\n            <button onClick={toggleVisibility}>{isVisible ? \"Hide\" : \"Show\"}</button>\r\n            <button onClick={handleShape}>{shape ? \"Change to Cube\" : \"Change to Circle\"}</button>\r\n            {/* <h4>Button</h4> */}\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useState } from \"react\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport textureArr from \"../MainCanvas/Meshes\";\r\n\r\nconst SideBar = ({isMenuOpen, toggleMenu, setTexture, textureType}) => {\r\n\r\n    // state used to keep up with active component\r\n    const [isActive, setIsActive] = useState(textureType); // mapped to current active texture, cleaner this way\r\n    \r\n    // Maps Names from textureArray from Meshes.js\r\n    let nameArr = []\r\n    for(let value of textureArr) {\r\n        nameArr.push(value.name);\r\n    }\r\n\r\n    // TODO: Add animations for when texture changes,\r\n    // Check Drei or PostProcessing, maybe Fiber\r\n\r\n    // TODO: Slide Animation does not occur consistently, Fix that\r\n    return(\r\n      <Menu customBurgerIcon={false} isOpen={isMenuOpen} onClose={toggleMenu} className=\"sidebar\">\r\n\r\n        {/* TEXTURES START */}\r\n\r\n        {/* textures Changes opacity on hover, Fix that */}\r\n        <h4 className=\"menu-item section-title\" style={{fontWeight: \"800\"}}>Textures</h4>\r\n        <br />\r\n        {\r\n            // Way easier to implement than i thought lol\r\n            nameArr.map(function(person, index) {\r\n                const checkIfActive = isActive === index ? \"active\" : \"\";\r\n                return (\r\n                    <h4 className={[\"menu-item\", \"clickable\", checkIfActive].join(\" \")} key={index} onClick={() => {setTexture(index); setIsActive(index);} }>{person}</h4>\r\n                );\r\n            })\r\n        }\r\n        \r\n        {/* TEXTURES END */}\r\n\r\n    </Menu>\r\n    );\r\n}\r\n\r\nexport default SideBar;","import React, { useState } from 'react';\r\n\r\nimport './App.scss';\r\n\r\nimport MainCanvas from './MainCanvas/MainCanvas';\r\nimport Header from './Header/Header';\r\nimport Footer from \"./Footer/Footer\";\r\nimport SlideBar from \"./Menu/SlideBar\";\r\n\r\n\r\nfunction App() {\r\n  \r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const [shape, setShape] = useState(0);\r\n\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n\r\n  const [textureType, setTextureType] = useState(0);\r\n  // TODO: Figure out Context, so that you don't have to pass states\r\n  // from 1 component to the other,\r\n  // ALERT: THIS WILL GET MESSY\r\n\r\n  const ChangeVisibility = () => {\r\n    setIsVisible(!isVisible);\r\n  };\r\n\r\n  const toggleShape = (index) => {\r\n    setShape(index);\r\n  }\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  }\r\n\r\n  const handleTextureChange = (index) => {\r\n    setTextureType(index);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header toggleMenu={toggleMenu}/> \r\n\r\n      <SlideBar\r\n      \r\n      \r\n      isMenuOpen={isMenuOpen} \r\n      toggleMenu={toggleMenu} \r\n      \r\n      setTexture={handleTextureChange} \r\n      textureType={textureType} \r\n      \r\n      />\r\n\r\n      <Footer\r\n      \r\n      // handles/toggles if shape is visible\r\n      toggleVisibility={ChangeVisibility} \r\n      isVisible={isVisible}\r\n      \r\n      // toggles the shape from circle to Cube\r\n      toggleShape={toggleShape} \r\n      shape={shape}\r\n      />\r\n\r\n      <MainCanvas \r\n      isVisible={isVisible} \r\n      shape={shape}\r\n      textureType={textureType}\r\n      />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}