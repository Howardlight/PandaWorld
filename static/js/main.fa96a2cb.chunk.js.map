{"version":3,"sources":["Header.module.scss","Footer.module.scss","ApandahMesh.js","MainCanvas.js","Header.js","Footer.js","App.js","index.js"],"names":["module","exports","ApandahMesh","position","args","isCircle","useState","expand","setExpand","mesh","useRef","useFrame","current","rotation","x","y","useTexture","process","apandahTexture","props","useSpring","scale","onClick","castShadow","ref","attach","map","factor","softShadows","MainCanvas","isVisible","shadows","colorManagement","camera","fov","intensity","receiveShadow","Math","PI","opacity","color","fallback","multisampling","preset","focusDisctance","focalLength","bokehScale","height","OrbitControls","Header","className","classes","Footer","toggleVisibility","toggleShape","shape","style","marginRight","App","setIsVisible","setIsCircle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa96a2cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__16nHY\",\"episode\":\"Header_episode__UmBWG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__Z5GwA\",\"logo\":\"Footer_logo__3y0kw\",\"episode\":\"Footer_episode__2Rh48\"};","import React, { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useTexture } from \"@react-three/drei\";\r\nimport { useSpring, a } from \"@react-spring/three\";\r\n\r\n\r\nconst ApandahMesh = ({ position, args, isCircle }) => {\r\n  // declare State hook\r\n  const [expand, setExpand] = useState(false);\r\n\r\n  // Refresh every Frame\r\n  const mesh = useRef(null);\r\n  useFrame(() => {\r\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.007;\r\n  });\r\n\r\n  // load Apandah Texture\r\n  const [apandahTexture] = useTexture([\r\n    process.env.PUBLIC_URL + \"/Apandah.jpg\",\r\n  ]);\r\n\r\n  // Load Animations with spring\r\n  const props = useSpring({\r\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\r\n  });\r\n\r\n  // handles shape of Mesh, Sphere or Box\r\n  function handleMeshShape() {   \r\n    if(isCircle) return <sphereBufferGeometry attach=\"geometry\" args={[(args[0] /2), (args[1] * 15), (args[2] * 13)]} />;\r\n    // ^^^ NOTE: this formula might need changing in the future\r\n    else return <boxBufferGeometry attach=\"geometry\" args={args} />;\r\n  }\r\n\r\n\r\n  return (\r\n    <a.mesh\r\n      onClick={() => setExpand(!expand)}\r\n      scale={props.scale}\r\n      castShadow\r\n      position={position}\r\n      ref={mesh}\r\n    >\r\n      {handleMeshShape()}\r\n      <meshStandardMaterial\r\n        attach=\"material\"\r\n        map={apandahTexture}\r\n        factor={0.3}\r\n      />\r\n    </a.mesh>\r\n  );\r\n};\r\n\r\nexport default ApandahMesh;\r\n","import React, { Suspense } from \"react\";\r\n\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { softShadows, OrbitControls } from \"@react-three/drei\";\r\nimport {\r\n  EffectComposer,\r\n  DepthOfField,\r\n  Noise,\r\n  // Vignette,\r\n  SMAA,\r\n} from \"@react-three/postprocessing\";\r\n\r\nimport ApandahMesh from \"./ApandahMesh\";\r\n\r\n// Softens the Shadows\r\nsoftShadows();\r\n\r\n\r\nconst MainCanvas = ({isVisible, isCircle}) => {\r\n\r\n\r\n\r\n  return (\r\n    <Canvas shadows colorManagement camera={{ position: [-5, 2, 10], fov: 60 }}>\r\n      <ambientLight intensity={0.2} />\r\n\r\n      <directionalLight\r\n        castShadow\r\n        position={[0, 10, 0]}\r\n        intensity={1.5}\r\n        shadow-mapSize-width={1024}\r\n        shadow-mapSize-height={1024}\r\n        shadow-camera-far={50}\r\n        shadow-camera-left={-10}\r\n        shadow-camera-right={10}\r\n        shadow-camera-top={10}\r\n        shadow-camera-bottom={-10}\r\n      />\r\n\r\n      <pointLight position={[-10, 0, -20]} intensity={0.5} />\r\n      <pointLight position={[0, -10, 0]} intensity={1.5} />\r\n\r\n      <group>\r\n        <mesh\r\n          receiveShadow\r\n          rotation={[-Math.PI / 2, 0, 0]}\r\n          position={[0, -3, 0]}\r\n        >\r\n          <planeBufferGeometry attach=\"geometry\" args={[100, 100]} />\r\n          <shadowMaterial attach=\"material\" opacity={0.3} />\r\n          <meshStandardMaterial attach=\"material\" color={\"#FFCAF6\"} />\r\n        </mesh>\r\n\r\n        <Suspense fallback={null}>\r\n          { isVisible ? <ApandahMesh position={[0, 1, 0]} args={[2, 2, 2]} isCircle={isCircle} /> : \"\"}\r\n\r\n          <EffectComposer multisampling={0}>\r\n            <SMAA preset={2} />\r\n          </EffectComposer>\r\n        </Suspense>\r\n      </group>\r\n\r\n      <EffectComposer>\r\n        <DepthOfField\r\n          focusDisctance={1}\r\n          focalLength={0.07}\r\n          bokehScale={3}\r\n          height={480}\r\n        />\r\n        {/* <Bloom luminanceThreshold={0} luminanceSmoothing={0.9} height={300} /> */}\r\n        <Noise opacity={0.02} />\r\n        {/* <Vignette eskil={false} offset={0.05} darkness={1.1} /> */}\r\n      </EffectComposer>\r\n      <OrbitControls />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default MainCanvas;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Header.module.scss\";\r\n\r\nconst Header = () => {\r\n    return(\r\n        <header className={classes.Header}>\r\n            <h4>Pandah World</h4>\r\n            <h4>By Ciel</h4>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport classes from \"./Footer.module.scss\";\r\n\r\n\r\nconst Footer = ({toggleVisibility, isVisible, toggleShape, shape}) => {\r\n\r\n\r\n    return(\r\n        <footer className={classes.Footer}>\r\n            <h4 onClick={toggleVisibility} style={{marginRight: \"auto\"}}>{isVisible ? \"Show\" : \"Hide\"}</h4>\r\n            <h4 onClick={toggleShape}>{shape ? \"Change to Cube\" : \"Change to Circle\"}</h4>\r\n            {/* <h4>Button</h4> */}\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useState } from 'react';\r\n\r\nimport './App.scss';\r\n\r\nimport MainCanvas from './MainCanvas';\r\nimport Header from './Header';\r\nimport Footer from \"./Footer\";\r\n\r\nfunction App() {\r\n  \r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const [isCircle, setIsCircle] = useState(false);\r\n\r\n  // TODO: Figure out Context, so that you don't have to pass states\r\n  // from 1 component to the other,\r\n  // ALERT: THIS WILL GET MESSY\r\n\r\n  const ChangeVisibility = () => {\r\n    setIsVisible(!isVisible);\r\n  };\r\n\r\n  const toggleShape = () => {\r\n    setIsCircle(!isCircle);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header /> \r\n\r\n      <Footer\r\n      \r\n      // handles/toggles if shape is visible\r\n      toggleVisibility={ChangeVisibility} \r\n      isVisible={isVisible}\r\n      \r\n      // toggles the shape from circle to Cube\r\n      toggleShape={toggleShape} \r\n      shape={isCircle}\r\n      />\r\n\r\n      <MainCanvas isVisible={isVisible} isCircle={isCircle}/>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}