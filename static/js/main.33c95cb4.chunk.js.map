{"version":3,"sources":["Header/Header.module.scss","Footer/Footer.module.scss","MainCanvas/ApandahMesh.js","MainCanvas/MainCanvas.js","Header/Header.js","Footer/Footer.js","Menu/SlideBar.js","App.js","index.js"],"names":["module","exports","ApandahMesh","position","args","isCircle","textureType","useState","expand","setExpand","mesh","useRef","useFrame","current","rotation","x","y","useTexture","process","textureArr","props","useSpring","scale","onClick","castShadow","ref","attach","map","factor","roughness","softShadows","MainCanvas","isVisible","shadows","colorManagement","camera","fov","intensity","receiveShadow","Math","PI","opacity","color","fallback","multisampling","preset","focusDisctance","focalLength","bokehScale","height","OrbitControls","Sky","distance","sunPosition","Inclination","azimuth","rayleigh","Header","toggleMenu","className","classes","style","display","alignItems","Footer","toggleVisibility","toggleShape","shape","SideBar","isMenuOpen","setTexture","isActive","setIsActive","customBurgerIcon","isOpen","onClose","fontWeight","person","index","checkIfActive","join","App","setIsVisible","setIsCircle","setIsMenuOpen","setTextureType","SlideBar","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.33c95cb4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"episode\":\"Header_episode__1j6XB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__ba7kL\",\"logo\":\"Footer_logo__2L6xR\",\"episode\":\"Footer_episode__2Jeem\"};","import React, { useRef, useState } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useTexture } from \"@react-three/drei\";\r\nimport { useSpring, a } from \"@react-spring/three\";\r\n\r\n\r\nconst ApandahMesh = ({ position, args, isCircle, textureType }) => {\r\n  // declare State hook\r\n  const [expand, setExpand] = useState(false);\r\n\r\n  // Refresh every Frame\r\n  const mesh = useRef(null);\r\n  useFrame(() => {\r\n    mesh.current.rotation.x = mesh.current.rotation.y += 0.007;\r\n  });\r\n\r\n  // load Apandah Texture\r\n  const [ApandahTexture, AztroTexture, ShlattTexture, MikaTexture] = useTexture([\r\n    process.env.PUBLIC_URL + \"/Apandah.jpg\",\r\n    process.env.PUBLIC_URL + \"/Aztro.jpg\",\r\n    process.env.PUBLIC_URL + \"/Jschlatt.png\",\r\n    process.env.PUBLIC_URL + \"/Mikasacus.jpg\",\r\n  ]);\r\n\r\n  let textureArr = [ApandahTexture, AztroTexture, ShlattTexture, MikaTexture];\r\n\r\n  // Load Animations with spring\r\n  const props = useSpring({\r\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\r\n  });\r\n\r\n  // handles shape of Mesh, Sphere or Box\r\n  function handleMeshShape() {   \r\n    if(isCircle) return <sphereBufferGeometry attach=\"geometry\" args={[args[0], (args[1] * 15), (args[2] * 13)]}  />;\r\n    // ^^^ NOTE: this formula might need changing in the future\r\n    else return <boxBufferGeometry attach=\"geometry\" args={args} />;\r\n  }\r\n\r\n\r\n  return (\r\n    <a.mesh\r\n      onClick={() => setExpand(!expand)}\r\n      scale={props.scale}\r\n      castShadow\r\n      position={position}\r\n      ref={mesh}\r\n    >\r\n      {handleMeshShape()}\r\n      <meshStandardMaterial\r\n        attach=\"material\"\r\n\r\n        map={textureArr[textureType]}\r\n\r\n\r\n\r\n        factor={0.3}\r\n        roughness={0.7}\r\n      />\r\n    </a.mesh>\r\n  );\r\n};\r\n\r\nexport default ApandahMesh;\r\n","import React, { Suspense } from \"react\";\r\n\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { softShadows, OrbitControls, CubeCamera, Sky } from \"@react-three/drei\";\r\nimport {\r\n  EffectComposer,\r\n  DepthOfField,\r\n  Noise,\r\n  // Vignette,\r\n  SMAA,\r\n} from \"@react-three/postprocessing\";\r\n\r\nimport ApandahMesh from \"./ApandahMesh\";\r\n// import { CubeCamera, FogExp2 } from \"three\";\r\n\r\n// Softens the Shadows\r\nsoftShadows();\r\n\r\n\r\nconst MainCanvas = ({isVisible, isCircle, textureType}) => {\r\n\r\n\r\n\r\n  return (\r\n    <Canvas shadows colorManagement camera={{ position: [-5, 2, 10], fov: 60 }}>\r\n      <ambientLight intensity={0.2} />\r\n\r\n      <directionalLight\r\n        castShadow\r\n        position={[0, 10, 0]}\r\n        intensity={1}\r\n        shadow-mapSize-width={1024}\r\n        shadow-mapSize-height={1024}\r\n        shadow-camera-far={50}\r\n        shadow-camera-left={-10}\r\n        shadow-camera-right={10}\r\n        shadow-camera-top={10}\r\n        shadow-camera-bottom={-10}\r\n      />\r\n\r\n      {/* <pointLight position={[-10, 0, -20]} intensity={0.5} />\r\n      <pointLight position={[0, -10, 0]} intensity={1.5} /> */}\r\n\r\n\r\n      <fog attach=\"fog\" args={['#f0f0f0', 20, 40]} />\r\n\r\n      {/* <fogExp2 attach=\"fog\" args={['#f0f0f0', 0.01]} /> */}\r\n      <group>\r\n        \r\n\r\n        <mesh\r\n          receiveShadow\r\n          rotation={[-Math.PI / 2, 0, 0]}\r\n          position={[0, -3, 0]}\r\n        >\r\n          <planeBufferGeometry attach=\"geometry\" args={[250, 250]} />\r\n          <shadowMaterial attach=\"material\" opacity={0.3} />\r\n          <meshStandardMaterial attach=\"material\" color={\"#FFCAF6\"} />\r\n        </mesh>\r\n\r\n        <Suspense fallback={null}>\r\n          { isVisible ? <ApandahMesh position={[0, 1, 0]} args={[2, 2, 2]} isCircle={isCircle} textureType={textureType} /> : \"\"}\r\n      \r\n          <EffectComposer multisampling={0}>\r\n            <SMAA preset={2} />\r\n          </EffectComposer>\r\n        </Suspense>\r\n      </group>\r\n\r\n      <EffectComposer>\r\n        <DepthOfField\r\n          focusDisctance={1}\r\n          focalLength={0.07}\r\n          bokehScale={3}\r\n          height={480}\r\n        />\r\n        {/* <Bloom luminanceThreshold={0} luminanceSmoothing={0.9} height={300} /> */}\r\n        <Noise opacity={0.02} />\r\n        {/* <Vignette eskil={false} offset={0.05} darkness={1.1} /> */}\r\n      </EffectComposer>\r\n      <OrbitControls />      \r\n\r\n      <Sky\r\n        distance={450000}\r\n        sunPosition={[5, 1, -6]}\r\n        Inclination={0}\r\n        azimuth={100} // what does this even do?????\r\n        rayleigh={0.2}\r\n        // for more methods check : https://threejs.org/examples/webgl_shaders_sky.html\r\n      />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default MainCanvas;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Header.module.scss\";\r\n\r\nconst Header = ({toggleMenu}) => {\r\n    return(\r\n        <header className={classes.Header}>\r\n            <div  style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n                <button onClick={toggleMenu}>Options</button>\r\n                <h4>Pandah World</h4>\r\n            </div>\r\n            <h4>By Ciel</h4>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport classes from \"./Footer.module.scss\";\r\n\r\n\r\nconst Footer = ({toggleVisibility, isVisible, toggleShape, shape}) => {\r\n\r\n    // TODO: Add more Buttons that control Texture\r\n    // TODO: add Effects Buttons, maybe slider???\r\n    // TODO: Add night time button, adds Stars, removes sun, darkens light emitters\r\n    // TIP: Use Leva or react-three/gui\r\n    // All components that will act as a UI MUST be overlapped over the canvas\r\n\r\n    return(\r\n        <footer className={classes.Footer}>\r\n            <button onClick={toggleVisibility}>{isVisible ? \"Hide\" : \"Show\"}</button>\r\n            <button onClick={toggleShape}>{shape ? \"Change to Cube\" : \"Change to Circle\"}</button>\r\n            {/* <h4>Button</h4> */}\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useState } from \"react\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\n\r\n\r\nconst SideBar = ({isMenuOpen, toggleMenu, setTexture, textureType}) => {\r\n\r\n    // state used to keep up with active component\r\n    const [isActive, setIsActive] = useState(textureType); // mapped to current active texture, cleaner this way\r\n    \r\n\r\n    // TODO: MAP THIS TO THE TEXTURES IN APANDAHMESH\r\n    // EXPORT APANDAHMESH TEXTURES AS THEIR OWN FILE\r\n    // AND USE IT TO MAP THIS ARR AUTOMATICALLY\r\n    let nameArr = [\"Apandah\", \"Aztrosist\", \"Jschlatt\", \"Mikasacus\"];\r\n\r\n    // TODO: Add animations for when texture changes,\r\n    // Check Drei or PostProcessing, maybe Fiber\r\n\r\n    return(\r\n      <Menu customBurgerIcon={false} isOpen={isMenuOpen} onClose={toggleMenu} className=\"sidebar\">\r\n\r\n        {/* TEXTURES START */}\r\n\r\n        {/* textures Changes opacity on hover, Fix that */}\r\n        <h4 className=\"menu-item\" style={{fontWeight: \"800\"}}>Textures</h4>\r\n        <br />\r\n        {\r\n            // Way easier to implement than i thought lol\r\n            nameArr.map(function(person, index) {\r\n                const checkIfActive = isActive === index ? \"active\" : \"\";\r\n                return (\r\n                    <h4 className={[\"menu-item\", \"clickable\", checkIfActive].join(\" \")} key={index} onClick={() => {setTexture(index); setIsActive(index);} }>{person}</h4>\r\n                );\r\n            })\r\n        }\r\n        \r\n        {/* TEXTURES END */}\r\n\r\n    </Menu>\r\n    );\r\n}\r\n\r\nexport default SideBar;","import React, { useState } from 'react';\r\n\r\nimport './App.scss';\r\n\r\nimport MainCanvas from './MainCanvas/MainCanvas';\r\nimport Header from './Header/Header';\r\nimport Footer from \"./Footer/Footer\";\r\nimport SlideBar from \"./Menu/SlideBar\";\r\n\r\n\r\nfunction App() {\r\n  \r\n  const [isVisible, setIsVisible] = useState(true);\r\n  const [isCircle, setIsCircle] = useState(false);\r\n\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n\r\n  const [textureType, setTextureType] = useState(0);\r\n  // TODO: Figure out Context, so that you don't have to pass states\r\n  // from 1 component to the other,\r\n  // ALERT: THIS WILL GET MESSY\r\n\r\n  const ChangeVisibility = () => {\r\n    setIsVisible(!isVisible);\r\n  };\r\n\r\n  const toggleShape = () => {\r\n    setIsCircle(!isCircle);\r\n  }\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  }\r\n\r\n  const handleTextureChange = (index) => {\r\n    setTextureType(index);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header toggleMenu={toggleMenu}/> \r\n\r\n      <SlideBar isMenuOpen={isMenuOpen} toggleMenu={toggleMenu} setTexture={handleTextureChange} textureType={textureType} />\r\n\r\n      <Footer\r\n      \r\n      // handles/toggles if shape is visible\r\n      toggleVisibility={ChangeVisibility} \r\n      isVisible={isVisible}\r\n      \r\n      // toggles the shape from circle to Cube\r\n      toggleShape={toggleShape} \r\n      shape={isCircle}\r\n      />\r\n\r\n      <MainCanvas \r\n      isVisible={isVisible} \r\n      isCircle={isCircle}\r\n      textureType={textureType}\r\n      />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}