{"version":3,"sources":["Header/Header.module.scss","Footer/Footer.module.scss","MainCanvas/Effects.js","MainCanvas/Light.js","MainCanvas/ObjectMesh/Utils.js","redux/store/ZustandStore.js","MainCanvas/ObjectMesh/BoxMesh.js","MainCanvas/ObjectMesh/SphereMesh.js","MainCanvas/ObjectMesh/CylinderMesh.js","MainCanvas/MainCanvas.js","Header/Header.js","Footer/Footer.js","App.js","index.js"],"names":["module","exports","Effects","multisampling","disableNormalPass","focusDisctance","focalLength","bokehScale","height","opacity","offset","darkness","eskil","blendFunction","BlendFunction","NORMAL","Light","intensity","castShadow","position","getAvailableTexturePaths","availableTextures","availableTexturesPaths","textureArr","value","push","name","process","fileName","getRandomImpulse","multiplier","Math","round","random","Shapes","useStore","create","set","texture","setToAmountTexture","input","state","isHidden","hideIsHidden","showIsHidden","shape","setToShape","BoxMesh","props","useState","expand","setExpand","useBox","mass","args","boxRef","boxApi","textureContents","useTexture","springProps","useSpring","scale","mesh","ref","onClick","randomImpulse","applyImpulse","attach","map","factor","roughness","MainMesh","useSphere","sphereRef","sphereApi","CylinderMesh","cylinderArgs","useCylinder","cylinderRef","cylinderApi","Plane","usePlane","rotation","PI","receiveShadow","color","softShadows","MainCanvas","shadows","colorManagement","camera","fov","fallback","SphereMesh","handleMeshLoading","OrbitControls","Stars","radius","depth","count","saturation","fade","Sky","distance","sunPosition","Inclination","azimuth","rayleigh","Header","className","classes","style","display","alignItems","Footer","hide","show","textureStateButtonName","setTextureStateButtonName","shapeStateButtonName","setShapeStateButtonName","handleTextureStateButtonName","length","handleShapeStateButtonName","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3ee1b3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"episode\":\"Header_episode__7ic5C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__1KJbI\",\"logo\":\"Footer_logo__2Se1O\",\"episode\":\"Footer_episode__1HKSX\"};","import {\r\n    EffectComposer,\r\n    DepthOfField,\r\n    Noise,\r\n    Vignette,\r\n} from \"@react-three/postprocessing\";\r\nimport { BlendFunction } from \"postprocessing\";\r\n\r\nconst Effects = () => {\r\n    return(\r\n        <>\r\n            <EffectComposer multisampling={0} disableNormalPass={true}>\r\n            <DepthOfField\r\n            focusDisctance={1}\r\n            focalLength={0.07}\r\n            bokehScale={3}\r\n            height={480}\r\n            />\r\n            {/* <Bloom luminanceThreshold={0} luminanceSmoothing={0.9} height={300} /> */}\r\n            <Noise opacity={0.02} />\r\n\r\n\r\n            {/* TIP: SMAA Fucked up the Vignette last time, Watch out */}\r\n            <Vignette\r\n            offset={0.5} // vignette offset\r\n            darkness={0.5} // vignette darkness\r\n            eskil={false} // Eskil's vignette technique\r\n            blendFunction={BlendFunction.NORMAL} // blend mode\r\n            />\r\n\r\n            </EffectComposer>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Effects;","\r\nconst Light = () => {\r\n    return(\r\n        <>\r\n            <ambientLight intensity={0.2} />\r\n\r\n            <directionalLight\r\n                castShadow\r\n                position={[3, 10, -7]}\r\n                intensity={1}\r\n                shadow-mapSize-width={1024}\r\n                shadow-mapSize-height={1024}\r\n                shadow-camera-far={50}\r\n                shadow-camera-left={-10}\r\n                shadow-camera-right={10}\r\n                shadow-camera-top={10}\r\n                shadow-camera-bottom={-10}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Light;","\r\n// Helper Func\r\n// Creates 2 Arrays, one with the file names,\r\n// the other with the Paths\r\n// Returns: List in the Shape of [availableTextures, availableTexturesPaths]\r\nexport function getAvailableTexturePaths() {\r\n    // list that will contain the output\r\n    let output = [];\r\n\r\n    // TODO: explain this maybe\r\n    let availableTextures = [];\r\n    let availableTexturesPaths = [];\r\n    for(let value of textureArr){\r\n        availableTextures.push(value.name + \"Texture\");\r\n        availableTexturesPaths.push(process.env.PUBLIC_URL + value.fileName);\r\n    }\r\n    \r\n    output = [availableTextures, availableTexturesPaths];\r\n    return output;\r\n}\r\n\r\n// Helper Func: returns random [r, r, r] list\r\nexport function getRandomImpulse(multiplier) {\r\n    return [\r\n      (Math.round(Math.random()) * 2 - 1) * multiplier,\r\n      (Math.random() * 3) * multiplier,\r\n      (Math.round(Math.random()) * 2 - 1) * multiplier\r\n    ];\r\n}\r\n\r\nexport const Shapes = [\r\n\r\n    \"Box\", // 0\r\n    \"Circle\", // 1\r\n    // \"Cone\", // 2\r\n    \"Cylinder\", // 3\r\n    // \"Dodecahedron\", // 4\r\n    // \"Icoashedron\", // 5\r\n    // \"Octagedron\", // 6\r\n    // \"Torus\", // 7\r\n\r\n];\r\n\r\n// Array that contains all the meshes\r\nexport const textureArr = [\r\n    \r\n    {\r\n        name: \"Apandah\",\r\n        fileName: \"/Apandah.jpg\"\r\n    },\r\n    {\r\n        name: \"Aztrosist\",\r\n        fileName: \"/Aztro.jpg\"\r\n    },\r\n    {\r\n        name: \"Jschlatt\",\r\n        fileName: \"/Jschlatt.png\"\r\n    },\r\n    {\r\n        name: \"Mikasacus\",\r\n        fileName: \"/Mikasacus.jpg\"\r\n    }\r\n];","import create from \"zustand\";\r\n\r\nexport const useStore = create(set => ({\r\n\r\n    // related to texture loaded on the MainMesh\r\n    texture: 0,\r\n    setToAmountTexture: (input) => set(state => ({ texture: input })),\r\n\r\n    // related to visibility of the MainMesh\r\n    isHidden: false,\r\n    hideIsHidden: () => set(state => ({ isHidden: true })),\r\n    showIsHidden: () => set(state => ({ isHidden: false})),\r\n\r\n    // related to the shape of the MainMesh\r\n    shape: 0,\r\n    setToShape: (input) => set(state => ({ shape: input})),\r\n\r\n}));","// React related Imports\r\nimport React, { \r\n  useState, \r\n  // useRef \r\n} from \"react\";\r\n\r\n// react three fiber drei spring cannon\r\n// import { \r\n//   useFrame, \r\n//   useThree\r\n// } from \"@react-three/fiber\";\r\nimport { useTexture } from \"@react-three/drei\";\r\nimport { useSpring, a } from \"@react-spring/three\";\r\nimport { \r\n  useBox, \r\n  // useCylinder, \r\n  // useSphere, \r\n  // useConeTwistConstraint\r\n} from \"@react-three/cannon\";\r\n\r\n// Helper Func\r\nimport { \r\n  getAvailableTexturePaths,\r\n  getRandomImpulse,\r\n} from \"./Utils\";\r\n\r\n// Zustand states\r\nimport { useStore } from \"../../redux/store/ZustandStore\";\r\n\r\nfunction BoxMesh (props) {\r\n  // Gets relevant states from Zustand\r\n  const texture = useStore(state => state.texture);\r\n\r\n  // declare State hook\r\n  const [expand, setExpand] = useState(false);\r\n\r\n  // NOTE: I have nooo idea what is wrong with this\r\n  // but here's a working model of Physics:\r\n  // https://codesandbox.io/s/react-three-cannon-demo-with-api-usage-mr25f?file=/src/App.js:327-646\r\n  // https://maxrohde.com/2019/10/23/create-and-drag-shapes-with-three-js-react-and-cannon-js/\r\n  // ARGS TAKES ONE NUMBER, NOT A LIST\r\n  // useBox seems to work fine, but useSphere is very finiky\r\n\r\n  const [boxRef, boxApi] = useBox(() => ({\r\n    mass: 1,\r\n    position: props.position,\r\n\r\n    args: props.args,\r\n  }));\r\n\r\n  // refreshes every frame\r\n  // useFrame(() => {\r\n  // });\r\n\r\n  // NOTE: cannot export funcs that rely on react components/hooks\r\n  function handleOnClick() {\r\n    // handles expanding the mesh\r\n    setExpand(!expand);\r\n    // if Mesh is not expanded next impulse will be 3x stronger\r\n    const randomImpulse = expand ? getRandomImpulse(1) : getRandomImpulse(3); \r\n    boxApi.applyImpulse(randomImpulse, [0, 0, 0]);\r\n  }\r\n\r\n  // GET TEXTURES AND INIT THEM\r\n  let textureContents = getAvailableTexturePaths(); // gets both the AvailableTextures output + their PATHS\r\n  let availableTextures = textureContents[0];\r\n  availableTextures = useTexture(textureContents[1]); \r\n\r\n  // Load Animations with spring\r\n  const springProps = useSpring({\r\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\r\n  });\r\n\r\n\r\n  return (\r\n    <a.mesh\r\n      scale={springProps.scale}\r\n      castShadow\r\n      ref={boxRef}\r\n      onClick={handleOnClick}\r\n    >\r\n      <boxBufferGeometry attach=\"geometry\" args={props.args} />;\r\n      <meshStandardMaterial\r\n        attach=\"material\"\r\n\r\n        map={\r\n          availableTextures[texture]\r\n        }\r\n\r\n        factor={0.3}\r\n        roughness={0.7}\r\n      />\r\n    </a.mesh>\r\n  );\r\n};\r\n\r\nexport default BoxMesh;\r\n","// React related Imports\r\nimport React, { \r\n  useState, \r\n  // useRef \r\n} from \"react\";\r\n\r\n// react three fiber drei spring cannon\r\n// import { \r\n//   useFrame, \r\n//   useThree\r\n// } from \"@react-three/fiber\";\r\nimport { useTexture } from \"@react-three/drei\";\r\nimport { useSpring, a } from \"@react-spring/three\";\r\nimport { \r\n  // useBox, \r\n  // useCylinder, \r\n  useSphere, \r\n  // useConeTwistConstraint\r\n} from \"@react-three/cannon\";\r\n\r\n// Helper Func\r\nimport { \r\n  getAvailableTexturePaths,\r\n  getRandomImpulse,  \r\n} from \"./Utils\";\r\n\r\n// Zustand states\r\nimport { useStore } from \"../../redux/store/ZustandStore\";\r\n\r\nfunction MainMesh (props) {\r\n  // Gets relevant states from Zustand\r\n  const texture = useStore(state => state.texture);\r\n\r\n  // declare State hook\r\n  const [expand, setExpand] = useState(false);\r\n\r\n  // NOTE: I have nooo idea what is wrong with this\r\n  // but here's a working model of Physics:\r\n  // https://codesandbox.io/s/react-three-cannon-demo-with-api-usage-mr25f?file=/src/App.js:327-646\r\n  // https://maxrohde.com/2019/10/23/create-and-drag-shapes-with-three-js-react-and-cannon-js/\r\n  // ARGS TAKES ONE NUMBER, NOT A LIST\r\n  // useBox seems to work fine, but useSphere is very finiky\r\n  \r\n  const [sphereRef, sphereApi] = useSphere(() => ({ \r\n    mass: 1,\r\n    position: props.position,\r\n\r\n    args: props.args[0],\r\n  }));\r\n\r\n\r\n  // refreshes every frame\r\n  // useFrame(() => {\r\n  // });\r\n\r\n  function handleOnClick() {\r\n    // handles expanding the mesh\r\n    setExpand(!expand);\r\n    // if Mesh is not expanded next impulse will be 3x stronger\r\n    const randomImpulse = expand ? getRandomImpulse(1) : getRandomImpulse(3); \r\n    sphereApi.applyImpulse(randomImpulse, [0, 0, 0]);\r\n  }\r\n\r\n  // GET TEXTURES AND INIT THEM\r\n  let textureContents = getAvailableTexturePaths(); // gets both the AvailableTextures output + their PATHS\r\n  let availableTextures = textureContents[0];\r\n  availableTextures = useTexture(textureContents[1]); \r\n\r\n  // Load Animations with spring\r\n  const springProps = useSpring({\r\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\r\n  });\r\n\r\n\r\n  return (\r\n    <a.mesh\r\n      scale={springProps.scale}\r\n      castShadow\r\n      ref={sphereRef}\r\n      onClick={handleOnClick}\r\n    >\r\n      <sphereBufferGeometry attach=\"geometry\" args={[props.args[0], (props.args[1] * 15), (props.args[2] * 13)]} />;\r\n      <meshStandardMaterial\r\n        attach=\"material\"\r\n\r\n        map={\r\n          availableTextures[texture]\r\n        }\r\n\r\n        factor={0.3}\r\n        roughness={0.7}\r\n      />\r\n    </a.mesh>\r\n  );\r\n};\r\n\r\nexport default MainMesh;\r\n","// React related Imports\r\nimport React, { \r\n  useState, \r\n  // useRef \r\n} from \"react\";\r\n\r\n// react three fiber drei spring cannon\r\n// import { \r\n//   useFrame, \r\n//   useThree\r\n// } from \"@react-three/fiber\";\r\nimport { useTexture } from \"@react-three/drei\";\r\nimport { useSpring, a } from \"@react-spring/three\";\r\nimport { \r\n  useCylinder,\r\n} from \"@react-three/cannon\";\r\n\r\n// Helper Func\r\nimport { \r\n  getAvailableTexturePaths,\r\n  getRandomImpulse,\r\n} from \"./Utils\";\r\n\r\n// Zustand states\r\nimport { useStore } from \"../../redux/store/ZustandStore\";\r\n\r\nfunction CylinderMesh (props) {\r\n  // Gets relevant states from Zustand\r\n  const texture = useStore(state => state.texture);\r\n\r\n  // declare State hook\r\n  const [expand, setExpand] = useState(false);\r\n\r\n  // NOTE: I have nooo idea what is wrong with this\r\n  // but here's a working model of Physics:\r\n  // https://codesandbox.io/s/react-three-cannon-demo-with-api-usage-mr25f?file=/src/App.js:327-646\r\n  // https://maxrohde.com/2019/10/23/create-and-drag-shapes-with-three-js-react-and-cannon-js/\r\n  // ARGS TAKES ONE NUMBER, NOT A LIST\r\n  // useBox seems to work fine, but useSphere is very finiky\r\n\r\n\r\n  // NOTE: Cylinder Might be too big\r\n  // Cylinder args are as follewed: [radiusTop, radiusBottom, Height,  numbSegment]\r\n  // height is set to 3X\r\n  const cylinderArgs = [props.args[0], props.args[1], (props.args[2] * 3), (props.args[2] * 12)];\r\n  const [cylinderRef, cylinderApi] = useCylinder(() => ({\r\n    mass: 1,\r\n    position: props.position,\r\n    args: cylinderArgs,\r\n  }));\r\n\r\n  // refreshes every frame\r\n  // useFrame(() => {\r\n  // });\r\n\r\n  // NOTE: cannot export funcs that rely on react components/hooks\r\n  function handleOnClick() {\r\n    // handles expanding the mesh\r\n    setExpand(!expand);\r\n    // if Mesh is not expanded next impulse will be 3x stronger\r\n    const randomImpulse = expand ? getRandomImpulse(1) : getRandomImpulse(3); \r\n    cylinderApi.applyImpulse(randomImpulse, [0, 0, 0]);\r\n  }\r\n\r\n  // GET TEXTURES AND INIT THEM\r\n  let textureContents = getAvailableTexturePaths(); // gets both the AvailableTextures output + their PATHS\r\n  let availableTextures = textureContents[0];\r\n  availableTextures = useTexture(textureContents[1]); \r\n\r\n  // Load Animations with spring\r\n  const springProps = useSpring({\r\n    scale: expand ? [1.4, 1.4, 1.4] : [1, 1, 1],\r\n  });\r\n\r\n\r\n  return (\r\n    <a.mesh\r\n      scale={springProps.scale}\r\n      castShadow\r\n      ref={cylinderRef}\r\n      onClick={handleOnClick}\r\n    >\r\n      <cylinderBufferGeometry attach=\"geometry\" args={cylinderArgs} />\r\n      <meshStandardMaterial\r\n        attach=\"material\"\r\n\r\n        map={\r\n          availableTextures[texture]\r\n        }\r\n\r\n        factor={0.3}\r\n        roughness={0.7}\r\n      />\r\n    </a.mesh>\r\n  );\r\n};\r\n\r\nexport default CylinderMesh;\r\n","import React, { Suspense } from \"react\";\r\n\r\n// Three Fiber Drei Cannon Imports\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { softShadows, OrbitControls, Sky, Stars} from \"@react-three/drei\";\r\nimport { \r\n  Physics,\r\n  usePlane,\r\n  // Debug\r\n} from \"@react-three/cannon\";\r\n\r\n// Canvas Objects and Configs\r\nimport Effects from \"./Effects\";\r\nimport Light from \"./Light\";\r\n\r\n// import MainMesh from \"./ObjectMesh/MainMesh\";\r\nimport BoxMesh from \"./ObjectMesh/BoxMesh\";\r\nimport SphereMesh from \"./ObjectMesh/SphereMesh\";\r\nimport CylinderMesh from \"./ObjectMesh/CylinderMesh\";\r\n\r\n// Zustand, handles isHidden State\r\nimport { useStore } from \"../redux/store/ZustandStore\";\r\n\r\n\r\nfunction Plane(props) {\r\n  const [ref] = usePlane(() => ({rotation: [-Math.PI /2, 0, 0], position: [0, -3, 0], ...props}));\r\n  return (\r\n    <mesh \r\n    receiveShadow\r\n    // rotation={[-Math.PI / 2, 0, 0]} \r\n    // position={[0, -3, 0]}\r\n    ref={ref}\r\n    >\r\n      <planeBufferGeometry attach=\"geometry\" args={[250, 250]} />\r\n      <shadowMaterial attach=\"material\" opacity={0.3} />\r\n      <meshStandardMaterial attach=\"material\" color={\"#FFCAF6\"} />\r\n    </mesh>\r\n  )\r\n}\r\n\r\n// Softens the Shadows\r\nsoftShadows();\r\nconst MainCanvas = () => {\r\n\r\n  // visibility-Zustand\r\n  const   isHidden = useStore(state => state.isHidden);\r\n  // shape-Zustand\r\n  const shape = useStore(state => state.shape);\r\n\r\n  // TODO: PORT IMAGES USED AS TEXTURES TO SRC, INSIDE ASSETS/IMAGES\r\n  // this is so they can benefit from the webpack and reduce the bundle size\r\n\r\n\r\n  // Swaps between the shapes\r\n  function handleMeshLoading() {\r\n    switch(shape) {\r\n      case 0:\r\n        return isHidden ? \"\" : <BoxMesh args={[2, 2, 2]} position={[0, 10, 0]} />;\r\n      case 1:\r\n        return isHidden ? \"\" : <SphereMesh args={[2, 2, 2]} position={[0, 10, 0]} />;\r\n      case 2:\r\n        return isHidden ? \"\" : <CylinderMesh args={[2, 2, 2]} position={[0, 10, 0]} />;\r\n      default:\r\n        return \"\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Canvas shadows colorManagement camera={{ position: [-10, 0, 0], fov: 65 }}>\r\n\r\n      <fog attach=\"fog\" args={['#f0f0f0', 20, 40]} />\r\n      <group>\r\n        <Physics>\r\n          <Suspense fallback={null}>\r\n            {/* <Debug > */}\r\n              <Plane />\r\n              {handleMeshLoading()}\r\n            {/* </Debug> */}\r\n          </Suspense>\r\n        </Physics>\r\n      </group>\r\n      <Light />\r\n      <Effects />\r\n      <OrbitControls />  \r\n\r\n\r\n      <Stars\r\n      radius={100} // Radius of the inner sphere (default=100)\r\n      depth={50} // Depth of area where stars should fit (default=50)\r\n      count={5000} // Amount of stars (default=5000)\r\n      factor={4} // Size factor (default=4)\r\n      saturation={0} // Saturation 0-1 (default=0)\r\n      fade // Faded dots (default=false)\r\n      />\r\n\r\n      <Sky\r\n        distance={450000}\r\n        sunPosition={[5, 1, -6]}\r\n        Inclination={0}\r\n        azimuth={100} // what does this even do?????\r\n        rayleigh={0.2}\r\n        // for more methods check : https://threejs.org/examples/webgl_shaders_sky.html\r\n      />\r\n    </Canvas>\r\n  );\r\n};\r\n\r\nexport default MainCanvas;\r\n","import React from \"react\";\r\n\r\nimport classes from \"./Header.module.scss\";\r\n\r\nconst Header = (\r\n    // {toggleMenu} // Phased out, used for the options button, remove when ready\r\n    ) => {\r\n    return(\r\n        <header className={classes.Header}>\r\n            <div  style={{display: \"flex\", alignItems: \"baseline\"}}>\r\n                {/* TODO: Maybe Change Options Button to something else */}\r\n                {/* <button onClick={toggleMenu}>Options</button> */}\r\n                <h4>Pandah World</h4>\r\n            </div>\r\n            {/* <h4>By Ciel</h4> */}\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import {React, useState} from \"react\";\r\nimport { useStore } from \"../redux/store/ZustandStore\";\r\nimport classes from \"./Footer.module.scss\";\r\n\r\nimport { Shapes, textureArr } from \"../MainCanvas/ObjectMesh/Utils\";\r\n\r\nconst Footer = () => {\r\n\r\n    // MESH VISIBILITY STORES\r\n    const isHidden = useStore(state => state.isHidden);\r\n    const hide = useStore(state => state.hideIsHidden);\r\n    const show = useStore(state => state.showIsHidden);\r\n\r\n    // CURRENT TEXTURE STORES\r\n    const texture = useStore(state => state.texture);\r\n    const setToAmountTexture = useStore(state => state.setToAmountTexture);    \r\n\r\n    // CURRENT SHAPE STORE\r\n    const shape = useStore(state => state.shape)\r\n    const setToShape = useStore(state => state.setToShape)\r\n\r\n\r\n    \r\n    // BUTTON TEXTS(CONTENTS) STATES\r\n    const [textureStateButtonName, setTextureStateButtonName] = useState(\"Apandah\");\r\n    const [shapeStateButtonName, setShapeStateButtonName] = useState(\"Box\");\r\n\r\n    // handles visibility Boolean Logic for Zustand\r\n    const handleIsHidden = () => {\r\n        if(isHidden === false) hide();\r\n        else show();\r\n    }\r\n\r\n    const handleTextureState = () => {\r\n        // ONCLICK will increment Texture state by 1\r\n        // if reached last possible choice, restart to 0\r\n        if(texture === textureArr.length - 1 ){\r\n            setToAmountTexture(0);\r\n        } else setToAmountTexture(texture+1);\r\n\r\n        // Changes name of button to reflect CURRENT texture\r\n        setTextureStateButtonName(textureArr[handleTextureStateButtonName(texture)].name);\r\n    }\r\n\r\n    const handleShapeState = () => {\r\n        // ONCLICK will increment shape state by 1\r\n        // if reached last possible choice, restart to 0\r\n        if(shape === Shapes.length - 1){\r\n            setToShape(0);\r\n        } else setToShape(shape+1);\r\n\r\n        // changes name of button to reflect CURRENT shape;\r\n        setShapeStateButtonName(Shapes[handleShapeStateButtonName(shape)]);\r\n    }\r\n\r\n    \r\n    const handleTextureStateButtonName = (texture) => {\r\n        //TODO: Maybe abstract this func and the shape one to only one function, they are very\r\n        // similar\r\n\r\n\r\n        // WHAT: if texture state reaches last correct value, return to 0,\r\n        // WHY: this is to give the array a valid index\r\n        //  otherwise it would cause an error, as clicking the button til the loop\r\n        //  will give -1, and 4, which are invalid array indexes\r\n        if(texture === textureArr.length - 1) return 0;\r\n        return texture+1;\r\n    }\r\n\r\n    const handleShapeStateButtonName = (shape) => {\r\n        // WHAT: if texture state reaches last correct value, return to 0,\r\n        // WHY: this is to give the array a valid index\r\n        //  otherwise it would cause an error, as clicking the button til the loop\r\n        //  will give -1, and 4, which are invalid array indexes\r\n        if(shape === Shapes.length-1) return 0;\r\n        else return shape+1;\r\n    }\r\n\r\n    // TODO: Add night time button, adds Stars, removes sun, darkens light emitters\r\n    // TIP: Use Leva or react-three/gui\r\n    // All components that will act as a UI MUST be overlapped over the canvas\r\n    return(\r\n        <footer className={classes.Footer}>\r\n            <button onClick={handleIsHidden}>{isHidden ? \"Show\" : \"Hide\"}</button>\r\n            <button onClick={handleTextureState}>{textureStateButtonName}</button>\r\n            <button onClick={handleShapeState}>{shapeStateButtonName}</button>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","// REACT RELATED\r\nimport { React } from 'react';\r\nimport './App.scss';\r\n\r\n// MAIN SCRIPTS\r\nimport MainCanvas from './MainCanvas/MainCanvas';\r\nimport Header from './Header/Header';\r\nimport Footer from \"./Footer/Footer\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Footer />\r\n\r\n      <MainCanvas />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}